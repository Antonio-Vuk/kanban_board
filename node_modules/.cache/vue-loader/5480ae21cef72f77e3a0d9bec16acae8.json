{"remainingRequest":"/Users/antoniovuk/Desktop/kanban_board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/antoniovuk/Desktop/kanban_board/src/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/antoniovuk/Desktop/kanban_board/src/components/Home.vue","mtime":1549573488000},{"path":"/Users/antoniovuk/Desktop/kanban_board/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/antoniovuk/Desktop/kanban_board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antoniovuk/Desktop/kanban_board/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable'\nimport * as firebase from 'firebase'\n\nexport default {\n    created(){\n        this.$store.dispatch('setLoading', true)\n        firebase.database().ref('meinObj').once('value')\n        .then((data) => {\n            this.$store.dispatch('setLoading', false)\n            if(data.val == null){\n                return;\n            }\n            const obj = data.val()\n            this.mainObject = obj;\n        })\n        .catch(error => {\n            this.$store.dispatch('setLoading', false)\n            console.log(error)\n        })\n    },\n    data(){\n        return{\n            mainObject: {\n                task: '',\n                name: '',\n                id: 1,\n                names: [\n                    {color: 'red', name: 'To do', id: 1},\n                    {color: 'yellow', name: 'Doing', id: 2},\n                    {color: 'green', name: 'Testing', id: 3},\n                    {color: 'blue', name: 'Done', id: 4}\n                ],\n                userId: null,\n                lists: [\n                    [\n                        // {id: 5, name: 'toni', desc: 'Izraditi bazu podataka', time: 2, status: 1},\n                        // {id: 6, name: 'kreso', desc: 'Napraviti front-end', time: 1, status: 1},\n                        // {id: 7, name: 'ivan', desc: 'Omoguciti beck-end', time: 5, status: 1},\n                        // {id: 8, name: 'jana', desc: 'Unijeti sve podatke', time: 4, status: 1},\n                    ],\n                    [\n                        // {id: 9, name: 'mihaela', desc: '-', time: 3, status: 2},\n                        // {id: 10, name: 'slavica', desc: '-', time: 7, status: 2},\n                        // {id: 11, name: 'zaljko', desc: '-', time: 5, status: 2},\n                        // {id: 12, name: 'daniel', desc: '-', time: 4, status: 2},\n                    ],\n                    [\n                        // {id: 13, name: 'tina', desc: '-', time: 7, status: 3},\n                        // {id: 14, name: 'maja', desc: '-', time: 5, status: 3},\n                        // {id: 15, name: 'klara', desc: '-', time: 3, status: 3}\n                    ],\n                    []\n                ],\n            }\n        }\n    },\n    components: {\n        draggable,\n    },\n    computed: {\n        loading(){\n            return this.$store.getters.loading\n        }\n    },\n    methods:{\n        onUpClick(element){\n            element.time++;\n        },\n        onDownClick(element){\n            if(element.time > 0){\n                element.time--;\n            }\n        },\n        onDeleteClick(element){\n            var id = element.id\n            var status = element.status\n            if(element.status == 1){\n                if(this.mainObject.lists[0].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n            if(element.status == 2){\n                if(this.mainObject.lists[1].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n            if(element.status == 3){\n                if(this.mainObject.lists[2].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n            if(element.status == 4){\n                if(this.mainObject.lists[3].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n        },\n        onMove(event){\n\n            if(this.mainObject.lists[event.from.id - 1].length == 0){\n            \n                \n                \n                \n            }\n\n            event.draggedContext.element.status = event.to.id; \n        },\n        createTask(){\n            if(this.mainObject.name == ''){\n                return\n            }\n            if(this.mainObject.task == ''){\n                return\n            }\n\n            this.mainObject.lists[0].push({\n                id: this.mainObject.id++, name: this.mainObject.name, desc: this.mainObject.task, time: 0, status: 1\n            })\n\n            this.mainObject.task = \"\"\n            this.mainObject.name = \"\"\n        },\n        OnSaveData(){\n\n            if( this.mainObject.lists[0].length >= 1 &&\n                this.mainObject.lists[1].length >= 1 &&\n                this.mainObject.lists[2].length >= 1 &&\n                this.mainObject.lists[3].length >= 1 \n            ){\n                this.$store.dispatch('setLoading', true)\n                firebase.database().ref('meinObj').set(this.mainObject)\n                .then(() => {\n                    this.$store.dispatch('setLoading', false)\n                })\n                .catch((error) => {\n                    this.$store.dispatch('setLoading', false)\n                    console.log(error)\n                })\n            }\n        }\n    }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container>\n        <v-layout class=\"row\" >\n                <v-flex mr-4>\n                    <v-text-field mx-4\n                    v-model=\"mainObject.name\"\n                    label=\"Name\"\n                    ></v-text-field>\n                </v-flex>\n                <v-flex mr-4 name=\"desc\">\n                    <v-text-field\n                    v-model=\"mainObject.task\"\n                    label=\"Task description\"\n                    ></v-text-field>\n                </v-flex>\n                <v-btn primary flat @click=\"createTask\">\n                    Create new task\n                </v-btn>\n                <v-btn primary flat @click=\"OnSaveData\">\n                    Save data\n                </v-btn>\n        </v-layout>\n        <v-layout row wrap>\n            <v-flex xs3 v-for=\"i in mainObject.names\" :key=\"i.id\">\n                <v-card :color=\"i.color\">\n                    <v-card-title>\n                        {{i.name}}\n                    </v-card-title>\n                </v-card>\n            </v-flex>\n        </v-layout>\n\n        <v-layout v-if=\"loading\">\n            <v-flex xs12 class=\"text-xs-center\">\n                <v-progress-circular\n                class=\"primary--text\"\n                :width=\"7\"\n                :size=\"70\"\n                indeterminate>\n                </v-progress-circular>\n            </v-flex>\n        </v-layout>\n\n\n        <v-layout v-else>\n            <v-flex xs3 v-for=\"i in 4\" :key=\"i\">\n                <draggable :id=\"i\" v-model=\"mainObject.lists[i-1]\" :move=\"onMove\" primary :options=\"{group:{name: 'people'}, sort:true}\">\n                    <v-card\n                    v-for=\"element in mainObject.lists[i-1]\"\n                    :key=\"element.id\">\n\n                        <v-card-text>\n                            <div style=\"color:blue;\">\n                                <h3>\n                                    {{element.name}}\n                                </h3>\n                            </div>\n                            <div>\n                                {{element.desc}}\n                            </div>\n                            <div>\n                                Time: {{element.time}}\n                            </div>\n                            <div>\n                                Status: {{element.status}}\n                            </div>\n                        </v-card-text>\n\n                        <v-card-actions>\n                            <v-btn \n                            @click=\"onDownClick(element)\"\n                            info flat>\n                                <v-icon>navigate_before</v-icon>\n                            </v-btn>\n\n                            <v-btn \n                            @click=\"onUpClick(element)\"\n                            info flat>\n                                <v-icon>navigate_next</v-icon>\n                            </v-btn>\n\n                            <v-btn \n                            @click=\"onDeleteClick(element)\"\n                            info flat>\n                                <v-icon>delete</v-icon>\n                            </v-btn>\n                        </v-card-actions>\n                    </v-card>\n                </draggable>\n            </v-flex>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport draggable from 'vuedraggable'\nimport * as firebase from 'firebase'\n\nexport default {\n    created(){\n        this.$store.dispatch('setLoading', true)\n        firebase.database().ref('meinObj').once('value')\n        .then((data) => {\n            this.$store.dispatch('setLoading', false)\n            if(data.val == null){\n                return;\n            }\n            const obj = data.val()\n            this.mainObject = obj;\n        })\n        .catch(error => {\n            this.$store.dispatch('setLoading', false)\n            console.log(error)\n        })\n    },\n    data(){\n        return{\n            mainObject: {\n                task: '',\n                name: '',\n                id: 1,\n                names: [\n                    {color: 'red', name: 'To do', id: 1},\n                    {color: 'yellow', name: 'Doing', id: 2},\n                    {color: 'green', name: 'Testing', id: 3},\n                    {color: 'blue', name: 'Done', id: 4}\n                ],\n                userId: null,\n                lists: [\n                    [\n                        // {id: 5, name: 'toni', desc: 'Izraditi bazu podataka', time: 2, status: 1},\n                        // {id: 6, name: 'kreso', desc: 'Napraviti front-end', time: 1, status: 1},\n                        // {id: 7, name: 'ivan', desc: 'Omoguciti beck-end', time: 5, status: 1},\n                        // {id: 8, name: 'jana', desc: 'Unijeti sve podatke', time: 4, status: 1},\n                    ],\n                    [\n                        // {id: 9, name: 'mihaela', desc: '-', time: 3, status: 2},\n                        // {id: 10, name: 'slavica', desc: '-', time: 7, status: 2},\n                        // {id: 11, name: 'zaljko', desc: '-', time: 5, status: 2},\n                        // {id: 12, name: 'daniel', desc: '-', time: 4, status: 2},\n                    ],\n                    [\n                        // {id: 13, name: 'tina', desc: '-', time: 7, status: 3},\n                        // {id: 14, name: 'maja', desc: '-', time: 5, status: 3},\n                        // {id: 15, name: 'klara', desc: '-', time: 3, status: 3}\n                    ],\n                    []\n                ],\n            }\n        }\n    },\n    components: {\n        draggable,\n    },\n    computed: {\n        loading(){\n            return this.$store.getters.loading\n        }\n    },\n    methods:{\n        onUpClick(element){\n            element.time++;\n        },\n        onDownClick(element){\n            if(element.time > 0){\n                element.time--;\n            }\n        },\n        onDeleteClick(element){\n            var id = element.id\n            var status = element.status\n            if(element.status == 1){\n                if(this.mainObject.lists[0].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n            if(element.status == 2){\n                if(this.mainObject.lists[1].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n            if(element.status == 3){\n                if(this.mainObject.lists[2].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n            if(element.status == 4){\n                if(this.mainObject.lists[3].length > 1){\n                    var index = this.mainObject.lists[status-1].findIndex(item => item.id == id)\n                    this.mainObject.lists[status-1].splice(index, 1)\n                }\n            }\n        },\n        onMove(event){\n\n            if(this.mainObject.lists[event.from.id - 1].length == 0){\n            \n                \n                \n                \n            }\n\n            event.draggedContext.element.status = event.to.id; \n        },\n        createTask(){\n            if(this.mainObject.name == ''){\n                return\n            }\n            if(this.mainObject.task == ''){\n                return\n            }\n\n            this.mainObject.lists[0].push({\n                id: this.mainObject.id++, name: this.mainObject.name, desc: this.mainObject.task, time: 0, status: 1\n            })\n\n            this.mainObject.task = \"\"\n            this.mainObject.name = \"\"\n        },\n        OnSaveData(){\n\n            if( this.mainObject.lists[0].length >= 1 &&\n                this.mainObject.lists[1].length >= 1 &&\n                this.mainObject.lists[2].length >= 1 &&\n                this.mainObject.lists[3].length >= 1 \n            ){\n                this.$store.dispatch('setLoading', true)\n                firebase.database().ref('meinObj').set(this.mainObject)\n                .then(() => {\n                    this.$store.dispatch('setLoading', false)\n                })\n                .catch((error) => {\n                    this.$store.dispatch('setLoading', false)\n                    console.log(error)\n                })\n            }\n        }\n    }\n}\n</script>"]}]}